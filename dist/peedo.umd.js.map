{"version":3,"file":"peedo.umd.js","sources":["../src/index.js"],"sourcesContent":["(function(window, document) {\n  'use strict';\n\n  const peedo = (function() {\n    const cache = {}\n    let path = location.pathname\n\n    const onStateChange = e => {\n      path = location.pathname\n      setPage()\n    }\n\n    const loadPage = url => {\n      window.history.pushState(null, null, url);\n\n      if (cache[url]) {\n        return setPage()\n      }\n\n      get(url, {})\n    }\n    \n    const setPage = html => {\n      let parser  = new window.DOMParser\n      let newPage = cache[path] || parser.parseFromString(html, 'text/html')\n\n      window.scrollTo(0, 0)\n\n      document.title = newPage.title\n      document.body.innerHTML = newPage.body.innerHTML\n      \n      if (! cache[path]) {\n        cache[path] = newPage\n      }\n    }\n  \n    const onLinkClick = e => {\n      if (e.metaKey || e.shiftKey || e.ctrlKey || e.altKey) {\n        return\n      }\n  \n      let target = e.target\n  \n      while (target && target.localName !== 'a') {\n        target = target.parentNode\n      }\n  \n      if (target && target.host !== location.host) {\n        return\n      }\n  \n      loadPage(path = target.pathname)\n      e.preventDefault()\n    }\n    \n    const get = (url, callback) => {\n      let request = new XMLHttpRequest()\n  \n      request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            if (request.status !== 500) {\n                setPage(request.responseText, request)\n            }\n            else {\n                callback(null, request)\n            }\n        }\n      }\n  \n      request.open('GET', url, true)\n      request.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n      request.send(null)\n    }\n\n    return {\n      run() {\n        document.addEventListener('click', onLinkClick)\n        window.addEventListener('popstate', onStateChange)\n      }\n    }\n  })()\n\n  window.peedo = peedo\n})(window, document)\n\ndocument.addEventListener('DOMContentLoaded', peedo.run)"],"names":["window","document","const","cache","path","onStateChange","setPage","onLinkClick","get","peedo","location","pathname","e","html","let","parser","DOMParser","newPage","parseFromString","scrollTo","title","body","innerHTML","metaKey","shiftKey","ctrlKey","altKey","target","localName","parentNode","host","url","history","pushState","loadPage","preventDefault","callback","request","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","setRequestHeader","send","run","addEventListener"],"mappings":"oJAAUA,EAAQC,GAGhBC,IACQC,EACFC,EAEEC,EAeAC,EAcAC,EAmBAC,EApDFC,GACEN,KACFC,EAAOM,SAASC,SAEdN,WAAgBO,GACpBR,EAAOM,SAASC,SAChBL,KAaIA,WAAUO,GACdC,IAAIC,EAAU,IAAIf,EAAOgB,UACrBC,EAAUd,EAAMC,IAASW,EAAOG,gBAAgBL,EAAM,aAE1Db,EAAOmB,SAAS,EAAG,GAEnBlB,EAASmB,MAAQH,EAAQG,MACzBnB,EAASoB,KAAKC,UAAYL,EAAQI,KAAKC,UAEjCnB,EAAMC,KACVD,EAAMC,GAAQa,IAIZV,WAAcK,GAClB,KAAIA,EAAEW,SAAWX,EAAEY,UAAYZ,EAAEa,SAAWb,EAAEc,QAA9C,CAMA,IAFAZ,IAAIa,EAASf,EAAEe,OAERA,GAA+B,MAArBA,EAAOC,WACtBD,EAASA,EAAOE,WAGdF,GAAUA,EAAOG,OAASpB,SAASoB,iBAnCxBC,GAGf,GAFA/B,EAAOgC,QAAQC,UAAU,KAAM,KAAMF,GAEjC5B,EAAM4B,GACR,OAAOzB,IAGTE,EAAIuB,MAgCJG,CAAS9B,EAAOuB,EAAOhB,UACvBC,EAAEuB,oBAGE3B,WAAOuB,EAAKK,GAChBtB,IAAIuB,EAAU,IAAIC,eAElBD,EAAQE,mBAAqB,WACA,IAAvBF,EAAQG,aACe,MAAnBH,EAAQI,OACRnC,EAAQ+B,EAAQK,aAAcL,GAG9BD,EAAS,KAAMC,KAKzBA,EAAQM,KAAK,MAAOZ,GAAK,GACzBM,EAAQO,iBAAiB,mBAAoB,kBAC7CP,EAAQQ,KAAK,QAIbC,eACE7C,EAAS8C,iBAAiB,QAASxC,GACnCP,EAAO+C,iBAAiB,WAAY1C,MAK1CL,EAAOS,MAAQA,GACdT,OAAQC,UAEXA,SAAS8C,iBAAiB,mBAAoBtC,MAAMqC"}